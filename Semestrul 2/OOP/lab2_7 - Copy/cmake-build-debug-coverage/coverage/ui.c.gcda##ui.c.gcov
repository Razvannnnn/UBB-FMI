        -:    0:Source:C:/Users/razva/Desktop/OOP/lab2_7/ui.c
        -:    0:Graph:C:\Users\razva\Desktop\OOP\lab2_7\cmake-build-debug-coverage\CMakeFiles\lab2_7.dir\ui.c.gcno
        -:    0:Data:C:\Users\razva\Desktop\OOP\lab2_7\cmake-build-debug-coverage\CMakeFiles\lab2_7.dir\ui.c.gcda
        -:    0:Runs:1
        -:    1:#include <stdlib.h>
        -:    2:#include <stdio.h>
        -:    3:#include <string.h>
        -:    4:#include "repo.h"
        -:    5:#include "service.h"
        -:    6:#include "cheltuieli.h"
        -:    7:#include "service.h"
        -:    8:#include "valid.h"
        -:    9:#include "ui.h"
        -:   10:
function Afisare called 0 returned 0% blocks executed 0%
    #####:   11:void Afisare(Lista lista_cheltuieli) {
        -:   12:    /*
        -:   13:     * Functie ce afiseaza toate cheltuielile dintr o lista de cheltuieli
        -:   14:     * preconditii: lista_cheltuieli - de tip Lista
        -:   15:     * postconditii: -
        -:   16:     */
    #####:   17:    for(int i=0;i<lista_cheltuieli.len;i++)
    %%%%%:   17-block  0
    %%%%%:   17-block  1
branch  0 never executed
branch  1 never executed (fallthrough)
        -:   18:    {
    #####:   19:        printf("%d %d %s\n", lista_cheltuieli.array[i].nr, lista_cheltuieli.array[i].suma, lista_cheltuieli.array[i].tip);
    %%%%%:   19-block  0
call    0 never executed
        -:   20:    }
    #####:   21:}
        -:   22:
function citire_cheltuiala called 0 returned 0% blocks executed 0%
    #####:   23:cheltuiala citire_cheltuiala() {
    #####:   24:    cheltuiala c = createCheltuiala();
    %%%%%:   24-block  0
call    0 never executed
    #####:   25:    printf("NR apartament:");
call    0 never executed
    #####:   26:    scanf("%d", &c.nr);
call    0 never executed
    #####:   27:    printf("Suma:");
call    0 never executed
    #####:   28:    scanf("%d", &c.suma);
call    0 never executed
    #####:   29:    printf("Tip:");
call    0 never executed
    #####:   30:    scanf("%s", c.tip);
call    0 never executed
        -:   31:
    #####:   32:    return c;
        -:   33:}
        -:   34:
function consola called 1 returned 0% blocks executed 10%
        1:   35:void consola(Lista* lista_cheltuieli) {
        -:   36:    while (1)
    #####:   37:    {
    %%%%%:   37-block  0
        1:   38:        printf("1. Adaugare cheltuiala in lista\n");
        1:   38-block  0
call    0 returned 1
        1:   39:        printf("2. Stergere cheltuiala din lista\n");
call    0 returned 1
        1:   40:        printf("3. Modificare cheltuiala din lista\n");
call    0 returned 1
        1:   41:        printf("4. Filtrare dupa o proprietate (nr, suma, tip)\n");
call    0 returned 1
        1:   42:        printf("5. Ordonare dupa suma sau tip (crescator/descrescator)\n");
call    0 returned 1
        1:   43:        printf("6. Lista cheltuieli\n");
call    0 returned 1
        1:   44:        printf("0. Inchidere aplicatie\n");
call    0 returned 1
        -:   45:
        1:   46:        int comanda = 0, nr, propr, proprietate, mod;
        -:   47:        cheltuiala c;
        1:   48:        printf("\nScrieti comanda:");
call    0 returned 1
        1:   49:        scanf("%d", &comanda);
call    0 returned 0
        -:   50:
    #####:   51:        switch(comanda) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
    #####:   52:            case 0:
    #####:   53:                destroyLista(lista_cheltuieli);
    %%%%%:   53-block  0
call    0 never executed
    #####:   54:                return;
    #####:   55:            case 1:
    #####:   56:                c = citire_cheltuiala();
    %%%%%:   56-block  0
call    0 never executed
    #####:   57:                if(srv_adaugare(lista_cheltuieli, c) == 1) printf("Cheltuiala a fost adaugata!\n");
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:   57-block  0
call    3 never executed
    #####:   58:                else printf("Cheltuiala invalida!\n");
    %%%%%:   58-block  0
call    0 never executed
    #####:   59:                break;
    %%%%%:   59-block  0
    #####:   60:            case 2:
    #####:   61:                printf("NR apartament:");
    %%%%%:   61-block  0
call    0 never executed
    #####:   62:                scanf("%d", &nr);
call    0 never executed
    #####:   63:                srv_stergere(lista_cheltuieli, nr);
call    0 never executed
    #####:   64:                break;
    #####:   65:            case 3:
    #####:   66:                c = citire_cheltuiala();
    %%%%%:   66-block  0
call    0 never executed
    #####:   67:                if(srv_modificare(lista_cheltuieli, c) == 1) printf("Cheltuiala a fost adaugata!\n");
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:   67-block  0
call    3 never executed
    #####:   68:                else printf("Cheltuiala invalida!\n");
    %%%%%:   68-block  0
call    0 never executed
    #####:   69:                break;
    %%%%%:   69-block  0
    #####:   70:            case 4:
    #####:   71:                printf("Alege proprietatea:\n");
    %%%%%:   71-block  0
call    0 never executed
    #####:   72:                printf("1. NR APT\n");
call    0 never executed
    #####:   73:                printf("2. SUMA\n");
call    0 never executed
    #####:   74:                printf("3. TIP\n");
call    0 never executed
    #####:   75:                scanf("%d", &propr);
call    0 never executed
    #####:   76:                if(propr == 1) {
branch  0 never executed (fallthrough)
branch  1 never executed
        -:   77:                    int nrfilt;
    #####:   78:                    printf("NR APT.=");
    %%%%%:   78-block  0
call    0 never executed
    #####:   79:                    scanf("%d", &nrfilt);
call    0 never executed
    #####:   80:                    if(nrfilt < 1) printf("NR APT. Invalid!\n");
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:   80-block  0
call    2 never executed
        -:   81:                    else {
    #####:   82:                        Lista new_list = filtrare_propr_nr(lista_cheltuieli, nrfilt);
    %%%%%:   82-block  0
call    0 never executed
    #####:   83:                        Afisare(new_list);
call    0 never executed
    #####:   84:                        destroyLista(&new_list);
call    0 never executed
        -:   85:                    }
        -:   86:                }
    #####:   87:                else if(propr == 2) {
    %%%%%:   87-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
        -:   88:                    int sumafilt;
    #####:   89:                    printf("SUMA=");
    %%%%%:   89-block  0
call    0 never executed
    #####:   90:                    scanf("%d", &sumafilt);
call    0 never executed
    #####:   91:                    if(sumafilt < 0) printf("SUMA Invalida!\n");
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:   91-block  0
call    2 never executed
        -:   92:                    else {
    #####:   93:                        Lista new_list = filtrare_propr_suma(lista_cheltuieli, sumafilt);
    %%%%%:   93-block  0
call    0 never executed
    #####:   94:                        Afisare(new_list);
call    0 never executed
    #####:   95:                        destroyLista(&new_list);
call    0 never executed
        -:   96:                    }
        -:   97:                }
    #####:   98:                else if(propr == 3) {
    %%%%%:   98-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
        -:   99:                    char tipfilt[51];
    #####:  100:                    printf("TIP=");
    %%%%%:  100-block  0
call    0 never executed
    #####:  101:                    scanf("%s", tipfilt);
call    0 never executed
    #####:  102:                    if(strcmp(tipfilt, "apa") != 0 && strcmp(tipfilt, "canal") !=0 && strcmp(tipfilt, "incalzire") != 0 && strcmp(tipfilt, "gaz") != 0) printf("TIP Invalid!\n");
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  102-block  0
branch  2 never executed (fallthrough)
branch  3 never executed
    %%%%%:  102-block  1
branch  4 never executed (fallthrough)
branch  5 never executed
    %%%%%:  102-block  2
branch  6 never executed (fallthrough)
branch  7 never executed
    %%%%%:  102-block  3
call    8 never executed
        -:  103:                    else {
    #####:  104:                        Lista new_list = filtrare_propr_tip(lista_cheltuieli, tipfilt);
    %%%%%:  104-block  0
call    0 never executed
    #####:  105:                        Afisare(new_list);
call    0 never executed
    #####:  106:                        destroyLista(&new_list);
call    0 never executed
        -:  107:                    }
        -:  108:                }
        -:  109:                else {
    #####:  110:                    printf("Optiune invalida!\n");
    %%%%%:  110-block  0
call    0 never executed
        -:  111:                }
        -:  112:            case 5:
    #####:  113:                printf("Sortare dupa suma(1) sau tip(2):");
    %%%%%:  113-block  0
call    0 never executed
    #####:  114:                scanf("%d", &proprietate);
call    0 never executed
    #####:  115:                if(proprietate == 1) {
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  116:                    printf("Sortare crescatoare(1) sau descrescatoare(2):");
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:                    scanf("%d", &mod);
call    0 never executed
    #####:  118:                    if(mod == 1) Afisare(sortare2(*lista_cheltuieli, sort_cresc));
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  118-block  0
call    2 never executed
call    3 never executed
    #####:  119:                    else if(mod == 2) Afisare(sortare2(*lista_cheltuieli, sort_descresc));
    %%%%%:  119-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  119-block  1
call    2 never executed
call    3 never executed
    #####:  120:                    else printf("Mod de sortare invalid!\n");
    %%%%%:  120-block  0
call    0 never executed
        -:  121:                }
    #####:  122:                else if(proprietate == 2) {
    %%%%%:  122-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    #####:  123:                    printf("Sortare crescatoare(1) sau descrescatoare(2):");
    %%%%%:  123-block  0
call    0 never executed
    #####:  124:                    scanf("%d", &mod);
call    0 never executed
    #####:  125:                    if(mod == 1) Afisare(sortare(*lista_cheltuieli, 0, 1));
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  125-block  0
call    2 never executed
call    3 never executed
    #####:  126:                    else if(mod == 2) Afisare(sortare(*lista_cheltuieli, 0, 0));
    %%%%%:  126-block  0
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  126-block  1
call    2 never executed
call    3 never executed
    #####:  127:                    else printf("Mod de sortare invalid!\n");
    %%%%%:  127-block  0
call    0 never executed
        -:  128:                }
    #####:  129:                else printf("Sortare invalida!\n");
    %%%%%:  129-block  0
call    0 never executed
    #####:  130:                break;
    %%%%%:  130-block  0
    #####:  131:            case 6:
    #####:  132:                Afisare(*lista_cheltuieli);
    %%%%%:  132-block  0
call    0 never executed
    #####:  133:                break;
        -:  134:        }
        -:  135:    }
        -:  136:}
