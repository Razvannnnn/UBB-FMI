        -:    0:Source:C:/Users/razva/Desktop/OOP/lab8_9/repo.cpp
        -:    0:Graph:C:\Users\razva\Desktop\OOP\lab8_9\cmake-build-debug-coverage\CMakeFiles\lab6.dir\repo.cpp.gcno
        -:    0:Data:C:\Users\razva\Desktop\OOP\lab8_9\cmake-build-debug-coverage\CMakeFiles\lab6.dir\repo.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "repo.h"
        -:    2:#include <cassert>
        -:    3:#include <iostream>
        -:    4:#include <exception>
        -:    5:#include <functional>
        -:    6:#include <algorithm>
        -:    7:#include <fstream>
        -:    8:
function _ZN10RepoProdus5existERK6Produs called 45 returned 100% blocks executed 95%
       45:    9:bool RepoProdus::exist(const Produs &produs) {
        -:   10:    try {
      141:   11:        cauta(produs.getNume(), produs.getTip(), produs.getProducator());
       45:   11-block  0
call    0 returned 45
branch  1 taken 45 (fallthrough)
branch  2 taken 0 (throw)
       45:   11-block  1
call    3 returned 45
branch  4 taken 45 (fallthrough)
branch  5 taken 0 (throw)
       45:   11-block  2
call    6 returned 45
branch  7 taken 45 (fallthrough)
branch  8 taken 0 (throw)
       45:   11-block  3
call    9 returned 45
branch 10 taken 13 (fallthrough)
branch 11 taken 32 (throw)
       13:   11-block  4
call   12 returned 13
call   13 returned 13
call   14 returned 13
       32:   11-block  5
call   15 returned 32
       32:   11-block  6
       32:   11-block  7
call   16 returned 32
       32:   11-block  8
       32:   11-block  9
call   17 returned 32
       32:   11-block 10
       13:   12:        return true;
        -:   13:    }
       32:   14:    catch (RepoException &) {
       32:   14-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 32
       32:   14-block  1
call    2 returned 32
       32:   15:        return false;
       32:   16:    }
        -:   17:}
        -:   18:
function _ZN10RepoProdus5storeERK6Produs called 31 returned 97% blocks executed 72%
       31:   19:void RepoProdus::store(const Produs &produs) {
       31:   20:    if (exist(produs)) {
       31:   20-block  0
call    0 returned 31
branch  1 taken 1 (fallthrough)
branch  2 taken 30
        3:   21:        throw RepoException("Produsul exista deja in lista!\n");
        1:   21-block  0
call    0 returned 1
        1:   21-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   21-block  2
call    4 returned 1
call    5 returned 1
call    6 returned 0
    $$$$$:   21-block  3
    $$$$$:   21-block  4
    $$$$$:   21-block  5
call    7 never executed
        -:   22:    } else {
       30:   23:        produse.push_back(produs);
       30:   23-block  0
call    0 returned 30
        -:   24:    }
       30:   25:}
        -:   26:
function _ZN10RepoProdus6modifyER6ProdusS1_ called 4 returned 75% blocks executed 60%
        4:   27:void RepoProdus::modify(Produs &produs, Produs& produsNou) {
        4:   28:    if(!exist(produs)) {
        4:   28-block  0
call    0 returned 4
branch  1 taken 1 (fallthrough)
branch  2 taken 3
        3:   29:        throw RepoException("Produsul nu exista in lista!\n");
        1:   29-block  0
call    0 returned 1
        1:   29-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   29-block  2
call    4 returned 1
call    5 returned 1
call    6 returned 0
    $$$$$:   29-block  3
    $$$$$:   29-block  4
    $$$$$:   29-block  5
call    7 never executed
        -:   30:    } else {
        7:   31:        for(Produs& p : produse) {
        3:   31-block  0
call    0 returned 3
call    1 returned 3
        4:   31-block  1
call    2 returned 4
        4:   31-block  2
call    3 returned 4
        7:   31-block  3
call    4 returned 7
branch  5 taken 4
branch  6 taken 3 (fallthrough)
       11:   32:            if (p.getNume() == produs.getNume() && p.getTip() == produs.getTip() &&
        4:   32-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   32-block  1
call    3 returned 4
branch  4 taken 4 (fallthrough)
branch  5 taken 0 (throw)
        4:   32-block  2
call    6 returned 4
branch  7 taken 3 (fallthrough)
branch  8 taken 1
branch  9 taken 3 (fallthrough)
branch 10 taken 0
        4:   32-block  3
call   11 returned 4
        4:   32-block  4
branch 12 taken 4 (fallthrough)
branch 13 taken 0
        4:   32-block  5
call   14 returned 4
        4:   32-block  6
branch 15 taken 4 (fallthrough)
branch 16 taken 0
        4:   32-block  7
call   17 returned 4
        4:   32-block  8
branch 18 taken 4 (fallthrough)
branch 19 taken 0
        4:   32-block  9
call   20 returned 4
        4:   32-block 10
branch 21 taken 3 (fallthrough)
branch 22 taken 1
    $$$$$:   32-block 11
branch 23 never executed (fallthrough)
branch 24 never executed
    $$$$$:   32-block 12
call   25 never executed
    $$$$$:   32-block 13
    $$$$$:   32-block 14
branch 26 never executed (fallthrough)
branch 27 never executed
    $$$$$:   32-block 15
call   28 never executed
    $$$$$:   32-block 16
    $$$$$:   32-block 17
branch 29 never executed (fallthrough)
branch 30 never executed
    $$$$$:   32-block 18
call   31 never executed
    $$$$$:   32-block 19
    $$$$$:   32-block 20
branch 32 never executed (fallthrough)
branch 33 never executed
    $$$$$:   32-block 21
call   34 never executed
    $$$$$:   32-block 22
       11:   33:                p.getProducator() == produs.getProducator() && p.getPret() == produs.getPret()) {
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   33-block  0
call    3 returned 4
branch  4 taken 4 (fallthrough)
branch  5 taken 0 (throw)
        4:   33-block  1
call    6 returned 4
branch  7 taken 4 (fallthrough)
branch  8 taken 0
        3:   33-block  2
call    9 returned 3
branch 10 taken 3 (fallthrough)
branch 11 taken 0 (throw)
        3:   33-block  3
call   12 returned 3
branch 13 taken 3 (fallthrough)
branch 14 taken 0 (throw)
        3:   33-block  4
call   15 returned 3
        3:   33-block  5
call   16 returned 3
branch 17 taken 3 (fallthrough)
branch 18 taken 0 (throw)
        3:   33-block  6
call   19 returned 3
branch 20 taken 3 (fallthrough)
branch 21 taken 0 (throw)
        3:   33-block  7
branch 22 taken 3 (fallthrough)
branch 23 taken 0
        3:   33-block  8
        1:   33-block  9
        4:   33-block 10
branch 24 taken 3 (fallthrough)
branch 25 taken 1
        3:   33-block 11
call   26 returned 3
        4:   33-block 12
branch 27 taken 3 (fallthrough)
branch 28 taken 1
        3:   33-block 13
call   29 returned 3
        4:   33-block 14
branch 30 taken 4 (fallthrough)
branch 31 taken 0
    $$$$$:   33-block 15
branch 32 never executed (fallthrough)
branch 33 never executed
    $$$$$:   33-block 16
call   34 never executed
    $$$$$:   33-block 17
    $$$$$:   33-block 18
branch 35 never executed (fallthrough)
branch 36 never executed
    $$$$$:   33-block 19
call   37 never executed
    $$$$$:   33-block 20
        3:   34:                p.setNume(produsNou.getNume());
        3:   34-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   34-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   34-block  2
call    6 returned 3
    $$$$$:   34-block  3
call    7 never executed
    $$$$$:   34-block  4
        3:   35:                p.setProducator(produsNou.getProducator());
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   35-block  0
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   35-block  1
call    6 returned 3
    $$$$$:   35-block  2
call    7 never executed
    $$$$$:   35-block  3
        3:   36:                p.setTip(produsNou.getTip());
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   36-block  0
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   36-block  1
call    6 returned 3
    $$$$$:   36-block  2
call    7 never executed
    $$$$$:   36-block  3
        3:   37:                p.setPret(produsNou.getPret());
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   37-block  0
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        -:   38:            }
        -:   39:        }
        -:   40:    }
        3:   41:}
        3:   41-block  0
        -:   42:
function _ZN10RepoProdus3delERK6Produs called 10 returned 90% blocks executed 61%
       10:   43:void RepoProdus::del(const Produs &produs) {
       10:   44:    if(!exist(produs)) {
       10:   44-block  0
call    0 returned 10
branch  1 taken 1 (fallthrough)
branch  2 taken 9
        3:   45:        throw RepoException("Produsul nu exista in lista!\n");
        1:   45-block  0
call    0 returned 1
        1:   45-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   45-block  2
call    4 returned 1
call    5 returned 1
call    6 returned 0
    $$$$$:   45-block  3
    $$$$$:   45-block  4
    $$$$$:   45-block  5
call    7 never executed
        -:   46:    } else {
        9:   47:        int i=0;
       24:   48:        while (i < produse.size()) {
        9:   48-block  0
       24:   48-block  1
call    0 returned 24
branch  1 taken 15
branch  2 taken 9 (fallthrough)
       15:   49:            if(produse[i].getNume() == produs.getNume() && produse[i].getProducator() == produs.getProducator() && produse[i].getTip() == produs.getTip()) {
       15:   49-block  0
call    0 returned 15
branch  1 taken 15 (fallthrough)
branch  2 taken 0 (throw)
       15:   49-block  1
call    3 returned 15
call    4 returned 15
branch  5 taken 15 (fallthrough)
branch  6 taken 0 (throw)
       15:   49-block  2
call    7 returned 15
branch  8 taken 13 (fallthrough)
branch  9 taken 2
       13:   49-block  3
call   10 returned 13
branch 11 taken 13 (fallthrough)
branch 12 taken 0 (throw)
       13:   49-block  4
call   13 returned 13
call   14 returned 13
branch 15 taken 13 (fallthrough)
branch 16 taken 0 (throw)
       13:   49-block  5
call   17 returned 13
branch 18 taken 9 (fallthrough)
branch 19 taken 4
        9:   49-block  6
call   20 returned 9
branch 21 taken 9 (fallthrough)
branch 22 taken 0 (throw)
        9:   49-block  7
call   23 returned 9
call   24 returned 9
branch 25 taken 9 (fallthrough)
branch 26 taken 0 (throw)
        9:   49-block  8
call   27 returned 9
branch 28 taken 9 (fallthrough)
branch 29 taken 0
        9:   49-block  9
        6:   49-block 10
       15:   49-block 11
branch 30 taken 9 (fallthrough)
branch 31 taken 6
        9:   49-block 12
call   32 returned 9
       15:   49-block 13
branch 33 taken 9 (fallthrough)
branch 34 taken 6
        9:   49-block 14
call   35 returned 9
       15:   49-block 15
branch 36 taken 13 (fallthrough)
branch 37 taken 2
       13:   49-block 16
call   38 returned 13
       15:   49-block 17
branch 39 taken 13 (fallthrough)
branch 40 taken 2
       13:   49-block 18
call   41 returned 13
       15:   49-block 19
branch 42 taken 15 (fallthrough)
branch 43 taken 0
       15:   49-block 20
call   44 returned 15
       15:   49-block 21
branch 45 taken 15 (fallthrough)
branch 46 taken 0
       15:   49-block 22
call   47 returned 15
       15:   49-block 23
branch 48 taken 9 (fallthrough)
branch 49 taken 6
    $$$$$:   49-block 24
branch 50 never executed (fallthrough)
branch 51 never executed
    $$$$$:   49-block 25
call   52 never executed
    $$$$$:   49-block 26
    $$$$$:   49-block 27
branch 53 never executed (fallthrough)
branch 54 never executed
    $$$$$:   49-block 28
call   55 never executed
    $$$$$:   49-block 29
    $$$$$:   49-block 30
branch 56 never executed (fallthrough)
branch 57 never executed
    $$$$$:   49-block 31
call   58 never executed
    $$$$$:   49-block 32
    $$$$$:   49-block 33
branch 59 never executed (fallthrough)
branch 60 never executed
    $$$$$:   49-block 34
call   61 never executed
    $$$$$:   49-block 35
    $$$$$:   49-block 36
branch 62 never executed (fallthrough)
branch 63 never executed
    $$$$$:   49-block 37
call   64 never executed
    $$$$$:   49-block 38
    $$$$$:   49-block 39
branch 65 never executed (fallthrough)
branch 66 never executed
    $$$$$:   49-block 40
call   67 never executed
    $$$$$:   49-block 41
call   68 never executed
        9:   50:                produse.erase(produse.begin()+i);
        9:   50-block  0
call    0 returned 9
call    1 returned 9
call    2 returned 9
call    3 returned 9
branch  4 taken 9 (fallthrough)
branch  5 taken 0 (throw)
        9:   50-block  1
    $$$$$:   50-block  2
    $$$$$:   50-block  3
        -:   51:            }
       15:   52:            i++;
       15:   52-block  0
        -:   53:        }
        -:   54:    }
        9:   55:}
        9:   55-block  0
        -:   56:
function _ZN10RepoProdus5cautaERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_ called 52 returned 33% blocks executed 75%
       52:   57:Produs &RepoProdus::cauta(const std::string& nume, const std::string& tip, const std::string& producator) {
function _ZZN10RepoProdus5cautaERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_ENKUlRK6ProdusE_clESA_ called 55 returned 100% blocks executed 66%
       52:   58:    auto p = std::find_if(produse.begin(), produse.end(), [&](const Produs& produs) {
       52:   58-block  0
call    0 returned 52
call    1 returned 52
call    2 returned 52
branch  3 taken 52 (fallthrough)
branch  4 taken 0 (throw)
       55:   59:        return (produs.getNume() == nume && produs.getTip() == tip && produs.getProducator() == producator);
       55:   59-block  0
call    0 returned 55
branch  1 taken 55 (fallthrough)
branch  2 taken 0 (throw)
       55:   59-block  1
call    3 returned 55
branch  4 taken 44 (fallthrough)
branch  5 taken 11
       44:   59-block  2
call    6 returned 44
branch  7 taken 44 (fallthrough)
branch  8 taken 0 (throw)
       44:   59-block  3
call    9 returned 44
branch 10 taken 27 (fallthrough)
branch 11 taken 17
       27:   59-block  4
call   12 returned 27
branch 13 taken 27 (fallthrough)
branch 14 taken 0 (throw)
       27:   59-block  5
call   15 returned 27
branch 16 taken 17 (fallthrough)
branch 17 taken 10
       17:   59-block  6
       38:   59-block  7
       55:   59-block  8
       55:   59-block  9
branch 18 taken 27 (fallthrough)
branch 19 taken 28
       27:   59-block 10
call   20 returned 27
       55:   59-block 11
branch 21 taken 44 (fallthrough)
branch 22 taken 11
       44:   59-block 12
call   23 returned 44
       55:   59-block 13
branch 24 taken 55 (fallthrough)
branch 25 taken 0
       55:   59-block 14
call   26 returned 55
       55:   59-block 15
       55:   59-block 16
    $$$$$:   59-block 17
branch 27 never executed (fallthrough)
branch 28 never executed
    $$$$$:   59-block 18
call   29 never executed
    $$$$$:   59-block 19
    $$$$$:   59-block 20
branch 30 never executed (fallthrough)
branch 31 never executed
    $$$$$:   59-block 21
call   32 never executed
    $$$$$:   59-block 22
    $$$$$:   59-block 23
branch 33 never executed (fallthrough)
branch 34 never executed
    $$$$$:   59-block 24
call   35 never executed
        -:   60:    });
       52:   61:    if (p != produse.end()) {
       52:   61-block  0
call    0 returned 52
call    1 returned 52
branch  2 taken 17 (fallthrough)
branch  3 taken 35
       34:   62:        return *p;
       17:   62-block  0
call    0 returned 17
       17:   62-block  1
        -:   63:    } else {
      105:   64:        throw RepoException("Produsul nu exista!\n");
       35:   64-block  0
call    0 returned 35
       35:   64-block  1
call    1 returned 35
branch  2 taken 35 (fallthrough)
branch  3 taken 0 (throw)
       35:   64-block  2
call    4 returned 35
call    5 returned 35
call    6 returned 35
    $$$$$:   64-block  3
    $$$$$:   64-block  4
    $$$$$:   64-block  5
call    7 never executed
        -:   65:    }
        -:   66:}
        -:   67:
function _ZN14RepoProdusFile12loadFromFileEv called 2 returned 100% blocks executed 58%
        2:   68:void RepoProdusFile::loadFromFile() {
        2:   69:    std::ifstream fin(filename);
        2:   69-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
       2*:   70:    if(!fin.is_open()) throw RepoException("Eroare la deschiderea fisierului!\n");
        2:   70-block  0
call    0 returned 2
branch  1 taken 0 (fallthrough)
branch  2 taken 2
    %%%%%:   70-block  1
call    3 never executed
    %%%%%:   70-block  2
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:   70-block  3
call    7 never executed
call    8 never executed
call    9 never executed
    $$$$$:   70-block  4
    $$$$$:   70-block  5
    $$$$$:   70-block  6
call   10 never executed
        4:   71:    while (!fin.eof()) {
        2:   71-block  0
        4:   71-block  1
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   71-block  2
branch  3 taken 4
branch  4 taken 0 (fallthrough)
        4:   72:        string nume, tip, producator;
        4:   72-block  0
call    0 returned 4
call    1 returned 4
call    2 returned 4
        -:   73:        double pret;
       4*:   74:        if(fin.eof()) break;
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   74-block  0
branch  3 taken 0 (fallthrough)
branch  4 taken 4
    %%%%%:   74-block  1
        4:   75:        fin >> nume;
        4:   75-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   76:        if(fin.eof()) break;
        4:   76-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   76-block  1
branch  3 taken 2 (fallthrough)
branch  4 taken 2
        2:   76-block  2
        2:   77:        fin >> tip;
        2:   77-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
       2*:   78:        if(fin.eof()) break;
        2:   78-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   78-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 2
    %%%%%:   78-block  2
        2:   79:        fin >> pret;
        2:   79-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
       2*:   80:        if(fin.eof()) break;
        2:   80-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   80-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 2
    %%%%%:   80-block  2
        2:   81:        fin >> producator;
        2:   81-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   82:        Produs p(nume, tip, pret, producator);
        2:   82-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   82-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   82-block  2
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:   82-block  3
call    9 returned 2
call   10 returned 2
call   11 returned 2
call   12 returned 2
    $$$$$:   82-block  4
    $$$$$:   82-block  5
call   13 never executed
    $$$$$:   82-block  6
    $$$$$:   82-block  7
call   14 never executed
    $$$$$:   82-block  8
        2:   83:        RepoProdus::store(p);
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        8:   84:    }
        2:   84-block  0
call    0 returned 2
        4:   84-block  1
call    1 returned 4
branch  2 taken 2 (fallthrough)
branch  3 taken 2
        2:   84-block  2
        4:   84-block  3
call    4 returned 4
branch  5 taken 2 (fallthrough)
branch  6 taken 2
        2:   84-block  4
        4:   84-block  5
call    7 returned 4
branch  8 taken 2 (fallthrough)
branch  9 taken 2
    $$$$$:   84-block  6
call   10 never executed
    $$$$$:   84-block  7
call   11 never executed
    $$$$$:   84-block  8
call   12 never executed
    $$$$$:   84-block  9
call   13 never executed
        2:   85:    fin.close();
        2:   85-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   86:}
        2:   86-block  0
call    0 returned 2
    $$$$$:   86-block  1
call    1 never executed
        -:   87:
function _ZN14RepoProdusFile11writeToFileEv called 4 returned 100% blocks executed 53%
        4:   88:void RepoProdusFile::writeToFile() {
        4:   89:    std::ofstream fout(filename);
        4:   89-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
       4*:   90:    if(!fout.is_open()) throw RepoException("Eroare la deschiderea fisierului!\n");
        4:   90-block  0
call    0 returned 4
branch  1 taken 0 (fallthrough)
branch  2 taken 4
    %%%%%:   90-block  1
call    3 never executed
    %%%%%:   90-block  2
call    4 never executed
branch  5 never executed (fallthrough)
branch  6 never executed (throw)
    %%%%%:   90-block  3
call    7 never executed
call    8 never executed
call    9 never executed
    $$$$$:   90-block  4
    $$$$$:   90-block  5
    $$$$$:   90-block  6
call   10 never executed
       10:   91:    for(auto &produs : RepoProdus::getAll()) {
        4:   91-block  0
call    0 returned 4
call    1 returned 4
call    2 returned 4
        6:   91-block  1
call    3 returned 6
       10:   91-block  2
call    4 returned 10
branch  5 taken 6
branch  6 taken 4 (fallthrough)
        6:   92:        fout << produs.getNume() << "\n";
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   92-block  0
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
        6:   92-block  1
call    6 returned 6
branch  7 taken 6 (fallthrough)
branch  8 taken 0 (throw)
        6:   92-block  2
call    9 returned 6
    $$$$$:   92-block  3
call   10 never executed
    $$$$$:   92-block  4
        6:   93:        fout << produs.getTip() << "\n";
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   93-block  0
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
        6:   93-block  1
call    6 returned 6
branch  7 taken 6 (fallthrough)
branch  8 taken 0 (throw)
        6:   93-block  2
call    9 returned 6
    $$$$$:   93-block  3
call   10 never executed
    $$$$$:   93-block  4
        6:   94:        fout << produs.getPret() << "\n";
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   94-block  0
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
        6:   94-block  1
call    6 returned 6
branch  7 taken 6 (fallthrough)
branch  8 taken 0 (throw)
        6:   95:        fout << produs.getProducator() << "\n";
        6:   95-block  0
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   95-block  1
call    3 returned 6
branch  4 taken 6 (fallthrough)
branch  5 taken 0 (throw)
        6:   95-block  2
call    6 returned 6
branch  7 taken 6 (fallthrough)
branch  8 taken 0 (throw)
        6:   95-block  3
call    9 returned 6
call   10 returned 6
    $$$$$:   95-block  4
call   11 never executed
    $$$$$:   95-block  5
        -:   96:    }
        4:   97:    fout.close();
        4:   97-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   98:}
        4:   98-block  0
call    0 returned 4
    $$$$$:   98-block  1
call    1 never executed
        -:   99:
        -:  100:
        -:  101:
        -:  102:
        -:  103:
        -:  104:
        -:  105:
function _Z16testRepoAdaugarev called 1 returned 100% blocks executed 58%
        1:  106:void testRepoAdaugare() {
        1:  107:    RepoProdus repo;
        1:  107-block  0
call    0 returned 1
        5:  108:    Produs p{"Apa", "Minerala", 2.99, "Bucovina"};
        1:  108-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  108-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  108-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  108-block  3
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
    $$$$$:  108-block  4
    $$$$$:  108-block  5
    $$$$$:  108-block  6
call   13 never executed
    $$$$$:  108-block  7
    $$$$$:  108-block  8
    $$$$$:  108-block  9
call   14 never executed
    $$$$$:  108-block 10
    $$$$$:  108-block 11
        1:  109:    repo.store(p);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  110:    assert(repo.getAll().size() == 1);
        1:  110-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  110-block  1
call    4 never executed
        1:  110-block  2
        -:  111:    try {
        1:  112:        repo.store(p);
        1:  112-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:  113:    }
        1:  114:    catch (RepoException&) {
        1:  114-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  114-block  1
call    2 returned 1
        -:  115:        assert(true);
        1:  116:    }
call    0 returned 1
        1:  117:}
        1:  117-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:  117-block  1
call    2 never executed
    $$$$$:  117-block  2
call    3 never executed
        -:  118:
function _Z16testRepoStergerev called 1 returned 100% blocks executed 60%
        1:  119:void testRepoStergere() {
        1:  120:    RepoProdus repo;
        1:  120-block  0
call    0 returned 1
        5:  121:    Produs p{"Apa", "Minerala", 2.99, "Bucovina"};
        1:  121-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  121-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  121-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  121-block  3
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
    $$$$$:  121-block  4
    $$$$$:  121-block  5
    $$$$$:  121-block  6
call   13 never executed
    $$$$$:  121-block  7
    $$$$$:  121-block  8
    $$$$$:  121-block  9
call   14 never executed
    $$$$$:  121-block 10
    $$$$$:  121-block 11
        1:  122:    repo.store(p);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  123:    assert(repo.getAll().size() == 1);
        1:  123-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  123-block  1
call    4 never executed
        1:  123-block  2
        1:  124:    repo.del(p);
        1:  124-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  125:    assert(repo.getAll().empty());
        1:  125-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  125-block  1
call    4 never executed
        1:  125-block  2
        -:  126:    try {
        1:  127:        repo.del(p);
        1:  127-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:  128:    }
        1:  129:    catch (RepoException&) {
        1:  129-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  129-block  1
call    2 returned 1
        -:  130:        assert(true);
        1:  131:    }
call    0 returned 1
        1:  132:}
        1:  132-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:  132-block  1
call    2 never executed
    $$$$$:  132-block  2
call    3 never executed
        -:  133:
function _Z18testRepoModificarev called 1 returned 100% blocks executed 58%
        1:  134:void testRepoModificare() {
        1:  135:    RepoProdus repo;
        1:  135-block  0
call    0 returned 1
        5:  136:    Produs p{"Apa", "Minerala", 2.99, "Bucovina"};
        1:  136-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  136-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  136-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  136-block  3
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
    $$$$$:  136-block  4
    $$$$$:  136-block  5
    $$$$$:  136-block  6
call   13 never executed
    $$$$$:  136-block  7
    $$$$$:  136-block  8
    $$$$$:  136-block  9
call   14 never executed
    $$$$$:  136-block 10
    $$$$$:  136-block 11
        1:  137:    repo.store(p);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        5:  138:    Produs p2{"Apa", "Plata", 3.99, "Bucovina"};
        1:  138-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  138-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  138-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  138-block  3
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
    $$$$$:  138-block  4
    $$$$$:  138-block  5
    $$$$$:  138-block  6
call   13 never executed
    $$$$$:  138-block  7
    $$$$$:  138-block  8
    $$$$$:  138-block  9
call   14 never executed
    $$$$$:  138-block 10
    $$$$$:  138-block 11
       1*:  139:    assert(repo.getAll().size() == 1);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  139-block  0
call    4 never executed
        1:  139-block  1
        1:  140:    repo.modify(p, p2);
        1:  140-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  141:    vector<Produs> produse = repo.getAll();
        1:  141-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
       1*:  142:    assert(repo.getAll().size() == 1);
        1:  142-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  142-block  1
call    4 never executed
        1:  142-block  2
       1*:  143:    assert(produse[0].getNume() == "Apa");
        1:  143-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  143-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  143-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  143-block  3
call    9 never executed
        1:  143-block  4
        1:  143-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:  143-block  6
call   12 returned 1
    $$$$$:  143-block  7
branch 13 never executed (fallthrough)
branch 14 never executed
    $$$$$:  143-block  8
call   15 never executed
    $$$$$:  143-block  9
       1*:  144:    assert(produse[0].getTip() == "Plata");
        1:  144-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  144-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  144-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  144-block  3
call    9 never executed
        1:  144-block  4
        1:  144-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:  144-block  6
call   12 returned 1
    $$$$$:  144-block  7
branch 13 never executed (fallthrough)
branch 14 never executed
    $$$$$:  144-block  8
call   15 never executed
    $$$$$:  144-block  9
       1*:  145:    assert(produse[0].getPret() == 3.99);
        1:  145-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  145-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:  145-block  2
call    6 never executed
        1:  145-block  3
       1*:  146:    assert(produse[0].getProducator() == "Bucovina");
        1:  146-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  146-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  146-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:  146-block  3
call    9 never executed
        1:  146-block  4
        1:  146-block  5
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:  146-block  6
call   12 returned 1
    $$$$$:  146-block  7
branch 13 never executed (fallthrough)
branch 14 never executed
    $$$$$:  146-block  8
call   15 never executed
    $$$$$:  146-block  9
        -:  147:    try {
        1:  148:        repo.modify(p, p2);
        1:  148-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:  149:    }
        1:  150:    catch (RepoException&) {
        1:  150-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  150-block  1
call    2 returned 1
        -:  151:        assert(true);
        1:  152:    }
call    0 returned 1
        1:  153:}
        1:  153-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
    $$$$$:  153-block  1
call    4 never executed
    $$$$$:  153-block  2
call    5 never executed
    $$$$$:  153-block  3
call    6 never executed
    $$$$$:  153-block  4
call    7 never executed
        -:  154:
function _Z7testMSGv called 1 returned 100% blocks executed 59%
        1:  155:void testMSG() {
        1:  155-block  0
        1:  156:    std::string Mesaj = "Exemplu";
        1:  156-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:  156-block  1
        1:  157:    RepoException repoException(Mesaj);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  157-block  0
call    3 returned 1
call    4 returned 1
    $$$$$:  157-block  1
        1:  158:    std::string MesajAfisat = repoException.getMsg();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  159:    assert(Mesaj == MesajAfisat);
        1:  159-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  159-block  1
call    3 never executed
        1:  159-block  2
        1:  160:}
        1:  160-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:  160-block  1
call    3 never executed
    $$$$$:  160-block  2
call    4 never executed
    $$$$$:  160-block  3
call    5 never executed
        -:  161:
function _Z10test_cautav called 1 returned 100% blocks executed 59%
        1:  162:void test_cauta() {
        1:  163:    RepoProdus repo;
        1:  163-block  0
call    0 returned 1
        5:  164:    Produs p{"Apa", "Minerala", 2.99, "Bucovina"};
        1:  164-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  164-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  164-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  164-block  3
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
    $$$$$:  164-block  4
    $$$$$:  164-block  5
    $$$$$:  164-block  6
call   13 never executed
    $$$$$:  164-block  7
    $$$$$:  164-block  8
    $$$$$:  164-block  9
call   14 never executed
    $$$$$:  164-block 10
    $$$$$:  164-block 11
        1:  165:    repo.store(p);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  166:    assert(repo.getAll().size() == 1);
        1:  166-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  166-block  1
call    4 never executed
        1:  166-block  2
        5:  167:    auto prod = repo.cauta("Apa", "Minerala", "Bucovina");
        1:  167-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  167-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  167-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  167-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  167-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  167-block  5
call   15 returned 1
call   16 returned 1
call   17 returned 1
    $$$$$:  167-block  6
call   18 never executed
    $$$$$:  167-block  7
    $$$$$:  167-block  8
    $$$$$:  167-block  9
call   19 never executed
    $$$$$:  167-block 10
    $$$$$:  167-block 11
    $$$$$:  167-block 12
call   20 never executed
    $$$$$:  167-block 13
    $$$$$:  167-block 14
       1*:  168:    assert(prod.getNume() == "Apa");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  168-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  168-block  1
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:  168-block  2
call    8 never executed
        1:  168-block  3
        1:  168-block  4
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:  168-block  5
call   11 returned 1
    $$$$$:  168-block  6
branch 12 never executed (fallthrough)
branch 13 never executed
    $$$$$:  168-block  7
call   14 never executed
    $$$$$:  168-block  8
       1*:  169:    assert(prod.getTip() == "Minerala");
        1:  169-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  169-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  169-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:  169-block  3
call    8 never executed
        1:  169-block  4
        1:  169-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:  169-block  6
call   11 returned 1
    $$$$$:  169-block  7
branch 12 never executed (fallthrough)
branch 13 never executed
    $$$$$:  169-block  8
call   14 never executed
    $$$$$:  169-block  9
       1*:  170:    assert(prod.getProducator() == "Bucovina");
        1:  170-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  170-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  170-block  2
branch  6 taken 0 (fallthrough)
branch  7 taken 1
    %%%%%:  170-block  3
call    8 never executed
        1:  170-block  4
        1:  170-block  5
branch  9 taken 1 (fallthrough)
branch 10 taken 0
        1:  170-block  6
call   11 returned 1
        1:  170-block  7
    $$$$$:  170-block  8
branch 12 never executed (fallthrough)
branch 13 never executed
    $$$$$:  170-block  9
call   14 never executed
    $$$$$:  170-block 10
        -:  171:    try {
       6*:  172:        auto prod2 = repo.cauta("Apa", "Minerala", "Bucovin");}
        1:  172-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  172-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  172-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  172-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
    %%%%%:  172-block  4
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
    %%%%%:  172-block  5
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
        1:  172-block  6
call   19 returned 1
        1:  172-block  7
        1:  172-block  8
        1:  172-block  9
call   20 returned 1
        1:  172-block 10
        1:  172-block 11
        1:  172-block 12
call   21 returned 1
        1:  172-block 13
        1:  172-block 14
        1:  173:    catch (RepoException&) {
        1:  173-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  173-block  1
call    2 returned 1
        -:  174:        assert(true);
        1:  175:    }
call    0 returned 1
        1:  176:}
        1:  176-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:  176-block  1
call    3 never executed
    $$$$$:  176-block  2
call    4 never executed
    $$$$$:  176-block  3
call    5 never executed
        -:  177:
        -:  178:
function _Z17testFILErepoWritev called 1 returned 100% blocks executed 58%
        1:  179:void testFILErepoWrite() {
        1:  179-block  0
        1:  180:    RepoProdusFile repo{"C:\\Users\\razva\\Desktop\\OOP\\lab8_9\\testFile.txt"};
        1:  180-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  180-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  180-block  2
call    6 returned 1
    $$$$$:  180-block  3
call    7 never executed
    $$$$$:  180-block  4
    $$$$$:  180-block  5
       1*:  181:    assert(repo.getAll().empty());
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  181-block  0
call    4 never executed
        1:  181-block  1
        5:  182:    Produs produs = {"z", "z", 10, "z"};
        1:  182-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  182-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  182-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  182-block  3
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
    $$$$$:  182-block  4
    $$$$$:  182-block  5
    $$$$$:  182-block  6
call   13 never executed
    $$$$$:  182-block  7
    $$$$$:  182-block  8
    $$$$$:  182-block  9
call   14 never executed
    $$$$$:  182-block 10
    $$$$$:  182-block 11
        1:  183:    repo.store(produs);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  184:    assert(repo.getAll().size() == 1);
        1:  184-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  184-block  1
call    4 never executed
        1:  184-block  2
        1:  185:    repo.del(produs);
        1:  185-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  186:    assert(repo.getAll().empty());
        1:  186-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  186-block  1
call    4 never executed
        1:  186-block  2
        1:  187:}
        1:  187-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:  187-block  1
call    2 never executed
    $$$$$:  187-block  2
call    3 never executed
        -:  188:
function _Z16testFILErepoReadv called 1 returned 100% blocks executed 58%
        1:  189:void testFILErepoRead() {
        1:  189-block  0
        1:  190:    RepoProdusFile repo{"C:\\Users\\razva\\Desktop\\OOP\\lab8_9\\test.txt"};
        1:  190-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  190-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  190-block  2
call    6 returned 1
    $$$$$:  190-block  3
call    7 never executed
    $$$$$:  190-block  4
    $$$$$:  190-block  5
       1*:  191:    assert(repo.getAll().size() == 2);
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  191-block  0
call    4 never executed
        1:  191-block  1
        5:  192:    Produs produs = {"z", "z", 10, "z"};
        1:  192-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  192-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  192-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  192-block  3
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
    $$$$$:  192-block  4
    $$$$$:  192-block  5
    $$$$$:  192-block  6
call   13 never executed
    $$$$$:  192-block  7
    $$$$$:  192-block  8
    $$$$$:  192-block  9
call   14 never executed
    $$$$$:  192-block 10
    $$$$$:  192-block 11
        1:  193:    repo.store(produs);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  194:    assert(repo.getAll().size() == 3);
        1:  194-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  194-block  1
call    4 never executed
        1:  194-block  2
        1:  195:    repo.del(produs);
        1:  195-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  196:    assert(repo.getAll().size() == 2);
        1:  196-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  196-block  1
call    4 never executed
        1:  196-block  2
        1:  197:}
        1:  197-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:  197-block  1
call    2 never executed
    $$$$$:  197-block  2
call    3 never executed
        -:  198:
        -:  199:
function _Z9testeREPOv called 1 returned 100% blocks executed 100%
        1:  200:void testeREPO() {
        1:  201:    testRepoAdaugare();
        1:  201-block  0
call    0 returned 1
        1:  202:    testRepoStergere();
call    0 returned 1
        1:  203:    testRepoModificare();
call    0 returned 1
        1:  204:    testMSG();
call    0 returned 1
        1:  205:    test_cauta();
call    0 returned 1
        1:  206:    testFILErepoWrite();
call    0 returned 1
        1:  207:    testFILErepoRead();
call    0 returned 1
        1:  208:}
