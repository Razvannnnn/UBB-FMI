        -:    0:Source:C:/Users/razva/Desktop/OOP/lab2_7/service.c
        -:    0:Graph:C:\Users\razva\Desktop\OOP\lab2_7\cmake-build-debug-coverage\CMakeFiles\lab2_7.dir\service.c.gcno
        -:    0:Data:C:\Users\razva\Desktop\OOP\lab2_7\cmake-build-debug-coverage\CMakeFiles\lab2_7.dir\service.c.gcda
        -:    0:Runs:1
        -:    1:#include <stdlib.h>
        -:    2:#include <stdio.h>
        -:    3:#include <string.h>
        -:    4:#include <assert.h>
        -:    5:#include "service.h"
        -:    6:#include "lista.h"
        -:    7:#include "cheltuieli.h"
        -:    8:#include "repo.h"
        -:    9:#include "valid.h"
        -:   10:
        -:   11:/*
        -:   12: * Functie ce valideaza o cheltuiala si o adauga in lista o cheltuieli
        -:   13: */
function srv_adaugare called 4 returned 100% blocks executed 100%
        4:   14:int srv_adaugare(Lista* lista, cheltuiala cheltuiala) {
        4:   15:    if(validare_cheltuiala(cheltuiala) == 1) {
        4:   15-block  0
call    0 returned 4
branch  1 taken 3 (fallthrough)
branch  2 taken 1
        3:   16:        adaugare(cheltuiala, lista);
        3:   16-block  0
call    0 returned 3
        3:   17:        return 1;
        -:   18:    }
        1:   19:    else return 0;
        1:   19-block  0
        -:   20:}
        -:   21:
        -:   22:/*
        -:   23: * Functie ce sterge din lista o cheltuiala
        -:   24: */
function srv_stergere called 1 returned 100% blocks executed 100%
        1:   25:int srv_stergere(Lista* lista, int nr) {
        1:   26:    stergere(nr, lista);
        1:   26-block  0
call    0 returned 1
        1:   27:    return 1;
        -:   28:}
        -:   29:
        -:   30:/*
        -:   31: * Functie ce modifica o cheltuiala si o valideaza
        -:   32: */
function srv_modificare called 2 returned 100% blocks executed 100%
        2:   33:int srv_modificare(Lista* lista, cheltuiala cheltuiala) {
        2:   34:    if(validare_cheltuiala(cheltuiala) == 1) {
        2:   34-block  0
call    0 returned 2
branch  1 taken 1 (fallthrough)
branch  2 taken 1
        1:   35:        modificare(cheltuiala, lista);
        1:   35-block  0
call    0 returned 1
        1:   36:        return 1;
        -:   37:    }
        1:   38:    return 0;
        1:   38-block  0
        -:   39:}
        -:   40:
        -:   41:// TESTE
        -:   42:
function test_srv_adaugare called 1 returned 100% blocks executed 82%
        1:   43:void test_srv_adaugare() {
        1:   44:    Lista lista_ad = createLista();
        1:   44-block  0
call    0 returned 1
        1:   45:    cheltuiala c = createCheltuiala();
call    0 returned 1
        1:   46:    c.nr = 250;
        1:   47:    c.suma = 300;
        1:   48:    strcpy(c.tip, "incalzire");
        -:   49:
       1*:   50:    assert(lista_ad.len == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   50-block  0
call    2 never executed
        1:   50-block  1
        1:   51:    srv_adaugare(&lista_ad, c);
        1:   51-block  0
call    0 returned 1
       1*:   52:    assert(lista_ad.len == 1);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   52-block  0
call    2 never executed
        1:   52-block  1
        1:   53:    cheltuiala c1 = createCheltuiala();
        1:   53-block  0
call    0 returned 1
        1:   54:    c1.nr = 30;
        1:   55:    c1.suma = -100;
        1:   56:    strcpy(c1.tip, "apa");
       1*:   57:    assert(srv_adaugare(&lista_ad, c1) == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   57-block  0
call    3 never executed
        1:   57-block  1
        -:   58:
        1:   59:    destroyCheltuiala(&c1);
        1:   59-block  0
call    0 returned 1
        1:   60:    destroyLista(&lista_ad);
call    0 returned 1
        1:   61:}
        -:   62:
function test_srv_stergere called 1 returned 100% blocks executed 80%
        1:   63:void test_srv_stergere() {
        1:   64:    Lista lista_st = createLista();
        1:   64-block  0
call    0 returned 1
        1:   65:    cheltuiala c = createCheltuiala();
call    0 returned 1
        1:   66:    c.nr = 250;
        1:   67:    c.suma = 300;
        1:   68:    strcpy(c.tip, "incalzire");
        -:   69:
       1*:   70:    assert(lista_st.len == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   70-block  0
call    2 never executed
        1:   70-block  1
        1:   71:    srv_adaugare(&lista_st, c);
        1:   71-block  0
call    0 returned 1
       1*:   72:    assert(lista_st.len == 1);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   72-block  0
call    2 never executed
        1:   72-block  1
        1:   73:    srv_stergere(&lista_st, 250);
        1:   73-block  0
call    0 returned 1
       1*:   74:    assert(lista_st.len == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   74-block  0
call    2 never executed
        1:   74-block  1
        -:   75:
        1:   76:    destroyLista(&lista_st);
        1:   76-block  0
call    0 returned 1
        1:   77:}
        -:   78:
function test_srv_modificare called 1 returned 100% blocks executed 82%
        1:   79:void test_srv_modificare() {
        1:   80:    Lista lista_mod = createLista();
        1:   80-block  0
call    0 returned 1
        1:   81:    cheltuiala c = createCheltuiala();
call    0 returned 1
        1:   82:    c.nr = 250;
        1:   83:    c.suma = 300;
        1:   84:    strcpy(c.tip, "incalzire");
        -:   85:
        1:   86:    cheltuiala c1 = createCheltuiala();
call    0 returned 1
        1:   87:    c1.nr = 250;
        1:   88:    c1.suma = 400;
        1:   89:    strcpy(c1.tip, "apa");
        -:   90:
        1:   91:    cheltuiala c2 = createCheltuiala();
call    0 returned 1
        1:   92:    c2.nr = 250;
        1:   93:    c2.suma = -100;
        1:   94:    strcpy(c2.tip, "apa");
        -:   95:
       1*:   96:    assert(lista_mod.len == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   96-block  0
call    2 never executed
        1:   96-block  1
        1:   97:    srv_adaugare(&lista_mod, c);
        1:   97-block  0
call    0 returned 1
       1*:   98:    assert(lista_mod.len == 1);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   98-block  0
call    2 never executed
        1:   98-block  1
        1:   99:    srv_modificare(&lista_mod, c1);
        1:   99-block  0
call    0 returned 1
       1*:  100:    assert(lista_mod.len == 1);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  100-block  0
call    2 never executed
        1:  100-block  1
       1*:  101:    assert(lista_mod.array[0].nr == 250 && lista_mod.array[0].suma == 400 && strcmp(lista_mod.array[0].tip, "apa") == 0);
        1:  101-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:  101-block  1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:  101-block  2
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:  101-block  3
call    6 never executed
        1:  101-block  4
       1*:  102:    assert(srv_modificare(&lista_mod, c2) == 0);
        1:  102-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  102-block  1
call    3 never executed
        1:  102-block  2
        -:  103:
        1:  104:    destroyCheltuiala(&c1);
        1:  104-block  0
call    0 returned 1
        1:  105:    destroyCheltuiala(&c2);
call    0 returned 1
        1:  106:    destroyLista(&lista_mod);
call    0 returned 1
        1:  107:}
