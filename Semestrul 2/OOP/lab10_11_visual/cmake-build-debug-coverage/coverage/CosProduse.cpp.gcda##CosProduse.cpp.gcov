        -:    0:Source:C:/Users/razva/Desktop/OOP/lab8_9/CosProduse.cpp
        -:    0:Graph:C:\Users\razva\Desktop\OOP\lab8_9\cmake-build-debug-coverage\CMakeFiles\lab6.dir\CosProduse.cpp.gcno
        -:    0:Data:C:\Users\razva\Desktop\OOP\lab8_9\cmake-build-debug-coverage\CMakeFiles\lab6.dir\CosProduse.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "CosProduse.h"
        -:    2:#include <random>
        -:    3:#include <algorithm>
        -:    4:
function _ZN10CosProduse15adaugaProdusCosERK6Produs called 2 returned 100% blocks executed 100%
        2:    5:void CosProduse::adaugaProdusCos(const Produs &p) {
        2:    6:    cosProduse.push_back(p);
        2:    6-block  0
call    0 returned 2
        2:    7:}
        -:    8:
function _ZN10CosProduse21adaugaRandomProdusCosESt6vectorI6ProdusSaIS1_EEi called 1 returned 100% blocks executed 87%
        1:    9:void CosProduse::adaugaRandomProdusCos(vector<Produs> produse, int nr) {
        -:   10:    //std::mt19937 mt{ std::random_device{}() };
        -:   11:    //std::uniform_int_distribution<> dist(0, produse.size()-1);
        -:   12:    //int rndNR = dist(mt);
        -:   13:
        1:   14:    shuffle(produse.begin(), produse.end(), std::default_random_engine(std::random_device{}()));
        1:   14-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   14-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   14-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   14-block  3
call    9 returned 1
call   10 returned 1
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   14-block  4
call   14 returned 1
    $$$$$:   14-block  5
call   15 never executed
    $$$$$:   14-block  6
        4:   15:    while (cosProduse.size() < nr && !produse.empty()) {
        4:   15-block  0
call    0 returned 4
branch  1 taken 3 (fallthrough)
branch  2 taken 1
        3:   15-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0
        3:   15-block  2
        1:   15-block  3
        4:   15-block  4
branch  6 taken 3
branch  7 taken 1 (fallthrough)
        3:   16:        cosProduse.push_back(produse.back());
        3:   16-block  0
call    0 returned 3
call    1 returned 3
        3:   17:        produse.pop_back();
call    0 returned 3
        -:   18:    }
        1:   19:}
        1:   19-block  0
        -:   20:
function _ZN10CosProduse9getAllCosEv called 5 returned 100% blocks executed 100%
        5:   21:const vector<Produs> &CosProduse::getAllCos() {
        5:   22:    return cosProduse;
        5:   22-block  0
        -:   23:}
        -:   24:
function _ZN10CosProduse9stergeCosEv called 1 returned 100% blocks executed 100%
        1:   25:void CosProduse::stergeCos() {
        1:   26:    cosProduse.clear();
        1:   26-block  0
call    0 returned 1
        1:   27:}
        -:   28:
