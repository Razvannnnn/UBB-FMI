     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 020103FDFC02FA              a db 2, 1, 3, -3, -4, 2, -6
    14                                      la equ $-a
    15 00000007 0405FB07FAFE01              b db 4, 5, -5, 7, -6, -2, 1
    16                                      lb equ $-b
    17 0000000E 00<rept>                    r times la+lb db 0
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; Se dau 2 siruri de octeti A si B. Sa se construiasca sirul R care sa contina doar elementele pare si negative din cele 2 siruri.
    23                                      
    24 00000000 B907000000                      mov ecx, la
    25 00000005 BA00000000                      mov edx, 0
    26 0000000A BE00000000                      mov esi, 0
    27                                          
    28 0000000F E318                            jecxz SfarsitA
    29                                          
    30                                          RepetaA:
    31 00000011 8A86[00000000]                      mov al, [a+esi]
    32 00000017 A801                                test al, 01h
    33 00000019 750B                                jne next
    34 0000001B 3C00                                cmp al, 0
    35 0000001D 7D07                                jge next
    36                                              
    37 0000001F 8882[0E000000]                      mov [r+edx], al
    38 00000025 42                                  inc edx
    39                                              
    40                                              next:
    41 00000026 46                                  inc esi
    42                                              
    43 00000027 E2E8                            loop RepetaA
    44                                          
    45                                          SfarsitA:
    46                                          
    47 00000029 B907000000                      mov ecx, lb
    48 0000002E BE00000000                      mov esi, 0
    49                                          
    50 00000033 E318                            jecxz SfarsitB
    51                                          
    52                                          RepetaB:
    53 00000035 8A86[07000000]                      mov al, [b+esi]
    54 0000003B A801                                test al, 01h
    55 0000003D 750B                                jne next2
    56 0000003F 3C00                                cmp al, 0
    57 00000041 7D07                                jge next2
    58                                              
    59 00000043 8882[0E000000]                      mov [r+edx], al
    60 00000049 42                                  inc edx
    61                                              
    62                                              next2:
    63 0000004A 46                                  inc esi
    64                                              
    65 0000004B E2E8                            loop RepetaB
    66                                          
    67                                          SfarsitB:
    68                                          
    69                                          
    70 0000004D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    71 0000004F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
