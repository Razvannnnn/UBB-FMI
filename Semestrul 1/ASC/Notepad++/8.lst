     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                  
    14 00000000 05                          a db 5
    15 00000001 1900                        d dw 25
    16                                      
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; 300-[5*(d-2*a)-1]
    22                                          
    23 00000000 B002                            mov AL, 2
    24 00000002 8A25[00000000]                  mov AH, [a]
    25 00000008 F6E4                            mul AH
    26                                          
    27 0000000A 668B1D[01000000]                mov BX, [d]
    28 00000011 6629C3                          sub BX, AX
    29                                          
    30 00000014 66B80000                        mov AX, 0
    31 00000018 6683C005                        add AX, 5
    32 0000001C 66F7E3                          mul BX
    33 0000001F 6683E801                        sub AX, 1
    34                                          
    35 00000023 6689C3                          mov BX, AX
    36 00000026 66B82C01                        mov AX, 300
    37 0000002A 6629D8                          sub AX, BX
    38                                          
    39                                          
    40                                      
    41                                          ; exit(0)
    42 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
