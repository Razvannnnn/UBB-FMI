     1                                  bits 32 
     2                                  global start        
     3                                  extern exit ; tell nasm that exit exists even if we won't be defining it
     4                                  import exit msvcrt.dll ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     5                                  ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
     6                                  ; our data is declared here (the variables needed by our program)
     7                                  segment data use32 class=data
     8                                  
     9 00000000 EAFF9100D0FF7F00            s dw -22, 145, -48, 127
    10                                      ls equ ($-s)/2
    11 00000008 00<rept>                	d times ls db 0
    12                                  
    13                                  segment code use32 class=code
    14                                  
    15                                      ;Se da un sir de cuvinte s. Sa se construiasca sirul de octeti d, astfel incat d sa contina pentru fiecare pozitie din s:
    16                                      ;- numarul de biti de 0, daca numarul este negativ
    17                                      ;- numarul de biti de 1, daca numarul este pozitiv
    18                                      
    19                                      ;s: -22, 145, -48, 127
    20                                      
    21                                      ;Exemplu
    22                                      
    23                                      ; in binary:
    24                                      ; 1111111111101010, 10010001, 1111111111010000, 1111111
    25                                      ; d: 3, 3, 5, 7
    26                                      
    27                                      start:
    28 00000000 B904000000                      mov ecx, ls
    29 00000005 E33A                            jecxz Sfarsit
    30 00000007 FC                              cld
    31 00000008 BE[00000000]                    mov esi, s
    32 0000000D BF[08000000]                    mov edi, d
    33                                          Repeta:
    34 00000012 51                                  push ecx
    35 00000013 66AD                                lodsw
    36 00000015 B910000000                          mov ecx, 16
    37 0000001A B300                                mov bl,0
    38 0000001C 6683F800                            cmp ax, 0
    39 00000020 7C04                                jl negativ
    40                                              pozitiv:
    41 00000022 B200                                    mov dl, 0
    42 00000024 EB02                                    jmp numara
    43                                              negativ:
    44 00000026 B201                                    mov dl, 1
    45                                              numara:
    46 00000028 66D1E0                                  shl ax, 1
    47 0000002B 80D300                                  adc bl, 0
    48 0000002E E2F8                                loop numara
    49                                              
    50 00000030 80FA00                              cmp dl, 0
    51 00000033 7704                                ja negativ2
    52                                              pozitiv2:
    53 00000035 88D8                                    mov al, bl
    54 00000037 EB04                                    jmp next
    55                                              negativ2:
    56 00000039 B010                                    mov al, 16
    57 0000003B 28D8                                    sub al, bl
    58                                                  
    59                                              next:
    60 0000003D 59                                  pop ecx
    61 0000003E AA                                  stosb
    62 0000003F E2D1                            loop Repeta
    63                                      
    64                                      Sfarsit:
    65                                          
    66 00000041 6A00                    	push dword 0 ; push the parameter for exit onto the stack
    67 00000043 FF15[00000000]          	call [exit] ; call exit to terminate the program
